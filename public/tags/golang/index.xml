<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Portfolio</title>
    <link>/tags/golang/</link>
    <description>Recent content in golang on Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 09 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python</title>
      <link>/blog/goisforlovers/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/goisforlovers/</guid>
      <description>This blog is a brief review on using re.findall() with multiple matches. The go docs provide more details.
Re.findall() Function The re.findal() function is an excellent tool in Python to look for and return all instances of a certain result in a string or list. There are special symbols and characters that can be used to return different results. Some examples of these symbols will be shown below.
The &amp;ldquo;.&amp;rdquo; symbol The &amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>